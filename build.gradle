plugins {
    id "java"
    id "idea"
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.1.14"
}

group = 'com.reto'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    serenityCoreVersion = '4.1.14'
    junitVersion = '5.10.0'
    assertJVersion = '3.23.1'
}

dependencies {
    testImplementation  "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
    testImplementation  "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    testImplementation  "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    testImplementation  "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    testImplementation  "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    testImplementation  "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    testImplementation  "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation  "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation  "org.assertj:assertj-core:${assertJVersion}"
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:${junitVersion}")
    testImplementation 'junit:junit:4.13.2'
    testImplementation('org.slf4j:slf4j-simple:2.0.7')
    testImplementation 'org.json:json:20240303'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties(System.getProperties())
}

tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?:1
    forkEvery = 100
}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)